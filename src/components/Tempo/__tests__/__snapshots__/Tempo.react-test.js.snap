// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tempo renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="Tempo"
>
    <h4
        className="Tempo_title"
    >
        Title
    </h4>
</div>,
  "nodes": Array [
    <div
      className="Tempo"
>
      <h4
            className="Tempo_title"
      >
            Title
      </h4>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Tempo
        paths={0}
        stepsClosed={0}
        stepsOpened={0}
        title="Title"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Tempo {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "paths": 0,
          "stepsClosed": 0,
          "stepsOpened": 0,
          "title": "Title",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="Tempo"
>
          <h4
                    className="Tempo_title"
          >
                    Title
          </h4>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="Tempo"
>
          <h4
                    className="Tempo_title"
          >
                    Title
          </h4>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tempo
    paths={0}
    stepsClosed={0}
    stepsOpened={0}
    title="Title"
/>,
}
`;

exports[`Tempo renders correctly with children 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="Tempo"
>
    <h4
        className="Tempo_title"
    >
        Title
    </h4>
    <div>
        Hello
    </div>
    <TempoLegend>
        <TempoLegendItem
            label="Test"
            value={3}
        />
    </TempoLegend>
</div>,
  "nodes": Array [
    <div
      className="Tempo"
>
      <h4
            className="Tempo_title"
      >
            Title
      </h4>
      <div>
            Hello
      </div>
      <TempoLegend>
            <TempoLegendItem
                  label="Test"
                  value={3}
            />
      </TempoLegend>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Tempo
        paths={0}
        stepsClosed={0}
        stepsOpened={0}
        title="Title"
>
        <div>
                Hello
        </div>
        <TempoLegend>
                <TempoLegendItem
                        label="Test"
                        value={3}
                />
        </TempoLegend>
</Tempo>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Tempo {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": Array [
            <div>
              Hello
</div>,
            <TempoLegend>
              <TempoLegendItem
                            label="Test"
                            value={3}
              />
</TempoLegend>,
          ],
          "paths": 0,
          "stepsClosed": 0,
          "stepsOpened": 0,
          "title": "Title",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="Tempo"
>
          <h4
                    className="Tempo_title"
          >
                    Title
          </h4>
          <div>
                    Hello
          </div>
          <TempoLegend>
                    <TempoLegendItem
                              label="Test"
                              value={3}
                    />
          </TempoLegend>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="Tempo"
>
          <h4
                    className="Tempo_title"
          >
                    Title
          </h4>
          <div>
                    Hello
          </div>
          <TempoLegend>
                    <TempoLegendItem
                              label="Test"
                              value={3}
                    />
          </TempoLegend>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tempo
    paths={0}
    stepsClosed={0}
    stepsOpened={0}
    title="Title"
>
    <div>
        Hello
    </div>
    <TempoLegend>
        <TempoLegendItem
            label="Test"
            value={3}
        />
    </TempoLegend>
</Tempo>,
}
`;
